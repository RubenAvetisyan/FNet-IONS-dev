// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider     = "mongodb"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  userId     Int           @unique
  email      String?
  name       String?
  token      String        @unique
  base64Data String        @unique
  role       Role          @default(USER)
  posts      Post[]
  telegram   TelegramUser?
  createdAt  DateTime?      @default(now())
  updatedAt  DateTime?      @updatedAt

  @@unique([token, base64Data])
}

model TelegramUser {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  tg_id       Int?     @unique
  first_name  String?
  last_name   String?
  username    String?
  is_bot      Boolean  @default(false)
  is_active   Boolean  @default(false)
  last_action String?
  bot_name    String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @unique @db.ObjectId
}

model Post {
  id          String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt   DateTime   @default(now())
  title       String
  published   Boolean    @default(false)
  author      User       @relation(fields: [authorId], references: [id])
  authorId    String     @db.ObjectId
  categoryIDs String[]   @db.ObjectId
  categories  Category[] @relation(fields: [categoryIDs], references: [id])
  type        PostType   @default(SYSTEM)
}

model Category {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  name    String
  postIDs String[] @db.ObjectId
  posts   Post[]   @relation(fields: [postIDs], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum PostType {
  SYSTEM
  TELEGRAM
}
